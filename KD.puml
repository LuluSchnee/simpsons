@startuml

interface State {
    + String getName()
    + void interact(String msg, SimpsonPerson person)
    + void recieve(String msg, SimpsonPerson person)
}

class SimpsonPerson {
    + final String name
    + Gender gender
    + final SimpsonPerson mother
    + final SimpsonPerson father
    + State state
    + SimpsonWorld world
    --
    + SimpsonPerson(String name, Gender gender, SimpsonPerson mother, SimpsonPerson father, SimpsonWorld world) throws Exception
    + void setState(State state)
    + String getName()
    + State getState()
    + Gender getGender()
    + SimpsonPerson getMother()
    + SimpsonPerson getFather()
    + void setFather(SimpsonPerson father)
    + void setMother(SimpsonPerson mother)
    + void interact(String msg, SimpsonPerson person)
    + void receive(String msg)
}

class SimpsonWorld {
    - ArrayList<SimpsonPerson> personList
    --
    + SimpsonWorld()
    + void sendMessage(String msg, SimpsonPerson person)
    + void addPerson(SimpsonPerson person)
}

class exist implements State {
    - SimpsonPerson person
    --
    + exist(SimpsonPerson person)
    + String getName()
    + void interact(String msg, SimpsonPerson person)
    + void recieve(String msg, SimpsonPerson person)
}

class live implements State {
    - SimpsonPerson person
    --
    + live(SimpsonPerson person)
    + String getName()
    + void interact(String msg, SimpsonPerson person)
    + void recieve(String msg, SimpsonPerson person)
}

class died implements State {
    - SimpsonPerson person
    --
    + died(SimpsonPerson person)
    + String getName()
    + void interact(String msg, SimpsonPerson person)
    + void recieve(String msg, SimpsonPerson person)
}

enum Gender {
    MALE
    FEMALE
}

SimpsonPerson "*" *-- "1" Gender : has


SimpsonPerson *-- "1" State
SimpsonWorld --*  SimpsonPerson


@enduml
